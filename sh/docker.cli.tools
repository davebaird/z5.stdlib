#!/bin/bash
import errcho
import dockertools

dbuild () {
    if [[ -r "Dockerfile" ]] && [[ -f "Dockerfile" ]]; then
        name=${PWD##*/}
        errcho "Building Docker image '$name'"
        docker build -t "$name" .
    else
        errcho "Error: no Dockerfile here"
    fi
}

# also: docker system prune
dcleanup () {
	local containers
	mapfile -t containers < <(docker ps -aq 2>/dev/null)
	docker rm "${containers[@]}" 2>/dev/null
	local volumes
	mapfile -t volumes < <(docker ps --filter status=exited -q 2>/dev/null)
	docker rm -v "${volumes[@]}" 2>/dev/null
	local images
	mapfile -t images < <(docker images --filter dangling=true -q 2>/dev/null)
	docker rmi "${images[@]}" 2>/dev/null
}

dstopall () {
    local containers
	mapfile -t containers < <(docker ps -aq 2>/dev/null)
    for c in "${containers[@]}"; do dtools.stop "$c"; done
}

dvolumes () {
    docker ps -a --format '{{ .ID }}' | xargs -I {} docker inspect -f '{{ .Name }}{{ printf "\n" }}{{ range .Mounts }}{{ printf "\n\t" }}{{ .Type }} {{ if eq .Type "bind" }}{{ .Source }}{{ end }}{{ .Name }} => {{ .Destination }}{{ end }}{{ printf "\n" }}' {}
}