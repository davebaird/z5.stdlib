#!/bin/bash
import errcho
import cleanup
import dockertools
import bashtools

docker build -t z5.zenika-chrome "$Z5_STDLIB"/docker/z5.zenika-chrome > /dev/null 2>&1

# webtools.redirected_url () {
#     cleanup.add dtools.stop "zenika-chrome-location-href.$$"

#     check.is.url "$1"

#     local -a vols
#     vols=(
#         --volume "$(pwd)":/usr/src/app
#         # --volume "$HOME"/.pki:/home/chrome/.pki
#         # --volume /etc/ssl/certs:/etc/ssl/certs
#         --volume user"$K2USERNUM"_root_pki:/home/chrome/.pki
#     )

#     local chrome
#     chrome="docker run -i --rm --user $(id -u) --name zenika-chrome-location-href.$$ ${vols[*]} zenika/alpine-chrome"

#     # The entrypoint is: chromium-browser --headless --disable-gpu --disable-software-rasterizer --disable-dev-shm-usage

#     #  + document.documentElement.outerHTML
#     printf 'location.href\nquit\n' | \
#         docker run -i --rm --user "$(id -u)" --name zenika-chrome-location-href.$$ "${vols[@]}" zenika/alpine-chrome \
#         --proxy-server="${PROXY_SERVER:-}" --no-sandbox --repl "$1" 2> /dev/null \
#         | sed 's/>>> //' | jq --raw-output '.result.value'
# }


webtools.redirected_url () {
    webtools.runjs "$1" location.href
}

webtools.ua () {
    webtools.runjs "$1" navigator.userAgent
}

# https://github.com/Zenika/alpine-chrome
# https://developers.google.com/web/updates/2017/04/headless-chrome
# https://peter.sh/experiments/chromium-command-line-switches/
webtools.runjs () {
    # gerrcho "Running js: $2"

    check.is.url "$1"

    local -a vols
    vols=(
        --volume "$(pwd)":/usr/src/app
    )

    # To use a custom CA, we mount a volume (Z5_STDLIB_WEBTOOLS_PKI_DIR) containing
    # the .pki files and (in the entrypoint) fix the path in pkcs11.txt
    # Z5_STDLIB_WEBTOOLS_PKI_DIR can be a path on the host, or a named volume.
    [[ -n ${Z5_STDLIB_WEBTOOLS_PKI_DIR:-} ]] && vols+=(--volume "$Z5_STDLIB_WEBTOOLS_PKI_DIR":/home/chrome/.ca:ro)

    local zenika; zenika=z5.zenika-chrome.$$
    cleanup.add dtools.stop "$zenika"

    #  + document.documentElement.outerHTML
    # set -x
    printf '%s\nquit\n' "$2" | \
        docker run -i --rm --user "$(id -u)" --name "$zenika" "${vols[@]}" z5.zenika-chrome \
        --no-sandbox --repl --proxy-server="${PROXY_SERVER:-}" "$1" 2> /dev/null \
        | sed 's/>>> //' | jq --raw-output '.result.value'
    # set +x
    #
}

webtools.redirected_url.native () {
    local -a args; args=(--headless --disable-gpu --disable-software-rasterizer --disable-dev-shm-usage)

    printf 'location.href\nquit\n' | \
        /snap/bin/chromium "${args[@]}" \
        --proxy-server="${PROXY_SERVER:-}" --no-sandbox --repl "$1" 2> /dev/null \
        | sed 's/>>> //' | jq --raw-output '.result.value'
}

# webtools.ua () {
#     printf 'navigator.userAgent\nquit\n' | \
#         docker run -i --rm --user "$(id -u "$USER")" --name zenika-chrome-location-href.$$ --volume "$(pwd)":/usr/src/app \
#         zenika/alpine-chrome --no-sandbox --repl "$@" 2> /dev/null \
#         | sed 's/>>> //' | jq --raw-output '.result.value'
# }

# This requires Chrome or chromium to be installed
webtools.dump_dom () {
    local url t; url="$1"; t="${2:-60}"

    yerrcho "chrome --dump_dom $url"

    # # # send stderr to void unless flag asks for stderr
    # if [[ ${Z5_WEBTOOLS_SHOW_CHROME_STDERR:-0} -eq 0 ]]; then
    #     exec 9>&2 2> /dev/null
    # fi

    "$Z5_STDLIB"/perl/get.dom "$url"

    # # undo stderr redirect
    # if [[ ${Z5_WEBTOOLS_SHOW_CHROME_STDERR:-0} -eq 0 ]]; then
    #     exec 2>&9
    # fi
}

# This doesn't wait long enough for the DOM to be ready on some sites e.g. CORDIS
webtools.dump_dom2 () {
    local url t; url="$1"; t="${2:-60}"

    yerrcho "chrome --dump_dom $url"

    # # send stderr to void unless flag asks for stderr
    if [[ ${Z5_WEBTOOLS_SHOW_CHROME_STDERR:-0} -eq 0 ]]; then
        exec 9>&2 2> /dev/null
    fi

    cleanup.add dtools.stop "zenika-chrome-dump-dom.$$"

    set.alarm "$t" "merrcho 'FIRING ALARM'; dtools.stop zenika-chrome-dump-dom.$$"
    local alarm; alarm=$!

    # merrcho "In process $$, have set alarm: $alarm"

    # Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/86.0.4240.111 Safari/537.36
    local ua; ua='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36'

    docker container run -i --rm --name zenika-chrome-dump-dom.$$ \
        zenika/alpine-chrome --no-sandbox --dump-dom --user-agent="$ua" "$url" #2> /dev/null

    # merrcho "Cancelling alarm: $alarm"
    cancel.alarm "$alarm"

    # undo stderr redirect
    if [[ ${Z5_WEBTOOLS_SHOW_CHROME_STDERR:-0} -eq 0 ]]; then
        exec 2>&9
    fi
}

check.is.url () {
    is.url "$1" || errxit "Not a URL: $1"
}

is.url () (
    set +e
    [[ $1 == http* ]] && return 0
    return 1
)

is.not.url () (
    set +e
    ! is.url "$1"
)

url.path () {
    perl -MURI -e "print URI->new('$1')->path"
}
