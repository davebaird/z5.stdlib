#!/bin/bash
import errcho

# https://stackoverflow.com/a/56486428/2334574
iptools.myip () {
    ip route get 1 | sed -n 's/^.*src \([0-9.]*\) .*$/\1/p'
}

iptools.get_ip_dns () {
    dig "$1" +short
}

# https://unix.stackexchange.com/questions/71379/host-lookup-that-respects-etc-hosts
iptools.get_ip_etc_hosts () {
    getent ahostsv4 "$1" | cut -d' ' -f1 | sort -u
}

iptools.get_ip_prefer_etc_hosts () {
    iptools.get_ip_etc_hosts "$1" || iptools.get_ip_dns "$1"
}

# TODO: check out Hostfile::Manager, hostfiles debian package (which is a script on top
# of Hostfile::Manager), and Config::Hosts to do this more robustly
# also updates if existing hostname entry has a different IP
iptools.etchosts.add () {
    local hostname; hostname="$1"
    local ip; ip="$2"
    local etc_hosts; etc_hosts=${3:-/etc/hosts} # useful for debugging

    # if it's already in there, do nothing
    grep --extended-regexp "^$ip(\s|\s.*\s)$hostname(\s|$)" "$etc_hosts" > /dev/null && return 0

    # if the IP is already in there, append the hostname
    local line
    if line="$(grep --extended-regexp "^$ip\s" "$etc_hosts")"
    then
        sed -i "/^${ip}\s/d" "$etc_hosts"       # delete the line
        echo "$line $hostname" >> "$etc_hosts"  # append it back in, with additional hostname
        return 0
    fi

    # if the hostname is in there, it's associated with the wrong IP, so remove it
    if grep --extended-regexp "\s$hostname(\s|$)" "$etc_hosts" > /dev/null
    then
        iptools.etchosts.rm "$hostname" "$etc_hosts"
    fi

    # neither hostname nor IP are in the file, so add them
    printf '%s\n' "$ip $hostname" >> "$etc_hosts"
}

iptools.etchosts.rm () {
    local hostname; hostname="$1"
    local etc_hosts; etc_hosts=${2:-/etc/hosts} # useful for debugging

    local line

    # hostname not found in file, so do nothing
    if ! line="$(grep --extended-regexp "\s$hostname(\s|$)" "$etc_hosts")"
    then
        errcho "hostname $hostname not found in $etc_hosts"
        return 0
    fi

    # the hostname was found, we've captured into $line

    # delete the line from the file
    sed -i --regexp-extended "/\s$hostname(\s|$)/d" "$etc_hosts"

    # remove hostname from the line
    # shellcheck disable=SC2001
    line="$(echo "$line" | sed --regexp-extended "s/\s$hostname(\s|$)/ /")"

    # append the line back in, if it still has other hostname(s)
    if [[ $(echo "$line" | wc --words) -gt 1 ]]
    then
        printf '%s\n' "$line" >> "$etc_hosts"
    fi
}
