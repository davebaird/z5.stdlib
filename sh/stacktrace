#!/bin/bash
import errcho

# https://gist.github.com/ahendrix/7030300

stacktrace() {
    local err=$?
    shopt -qo errexit || return 0

    set +o xtrace
    local code="${1:-1}"

    merrcho "Error in ${BASH_SOURCE[1]}:${BASH_LINENO[0]}: '${BASH_COMMAND}' exited with status $err"

    # Print out the stack trace described by $function_stack
    if [ ${#FUNCNAME[@]} -gt 2 ]
    then
        merrcho "Call tree:"
        for ((i=1; i<${#FUNCNAME[@]}-1; i++))
        do
            merrcho " $i: ${BASH_SOURCE[$i+1]}:${BASH_LINENO[$i]} ${FUNCNAME[$i]}(...)"
        done
    fi

    merrcho "Exiting with status ${code}"
    exit "${code}"
}

# trap ERR to provide an error handler whenever a command exits nonzero
#  this is a more verbose version of set -o errexit
trap 'stacktrace' ERR

# setting errtrace allows our ERR trap handler to be propagated to functions,
#  expansions and subshells
set -o errtrace
