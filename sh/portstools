#!/bin/bash
import errcho

# https://serverfault.com/questions/576910/how-to-find-full-process-arguments-and-associated-listening-ports
# ss -a -tu -n -p | awk 'NR>1 { split($7,p,","); split(p[2],pid,"="); printf "Listen: "$5 " Command: "; system("ps --no-headers -ww -o args p "pid[2]); }'

OPTIONS=l
LONGOPTS=longlines

ports.commands () {
    ports._parseopts "$@"

    local printformat; printformat="%-7s%-20s%-20s%-10s%-10s%s"
    # shellcheck disable=SC2059
    printf "$printformat\n" State Local Peer PID User Command

    # shellcheck disable=SC2034,SC2162
    while read Netid State RecvQ SendQ Local Peer users
    do
        [[ -z $users ]] && continue     # skip states with no associated pid
        # $users looks like:  users:(("perl",pid=88643,fd=3)) [sometimes it has 2 sets, when host and peer ends are on the same machine]
        ports._split_users "$users"
        cmd=$(ps --no-headers -ww -o args --pid "$pid")

        # shellcheck disable=SC2059
        printf -v line "$printformat" "$State" "$Local" "$Peer" "$pid" "$user" "$cmd"

        if [[ $l == y ]]; then
            echo "$line"
        else
            echo "$line" | less -SEX # fit output to width of terminal
        fi
    done < <(ss --no-header --all --tcp --udp --numeric --processes)
}

ports._split_users () {
    local _users=$1
    local IFS=,
    # shellcheck disable=SC2086
    set $_users
    local users_part; users_part=$1
    local pid_part; pid_part=$2
    local IFS='='
    # shellcheck disable=SC2086
    set $pid_part
    pid=$2
    local IFS=\"
    # shellcheck disable=SC2086
    set $users_part
    user=$2
}

# ----- options ----------------------------------------------------------------
# For getopt (enhanced): https://stackoverflow.com/a/29754866/2334574
ports._parseopts () {
    local parsed; parsed="$(parseopts "$OPTIONS" "$LONGOPTS" "$@")"
    eval set -- "$parsed"

    l=n
    while true; do
        case "$1" in
            -l|--longlines)
                l=y
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                errxit "Getopt processing error" 1
                ;;
        esac
    done
}


