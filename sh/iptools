#!/bin/bash
import errcho

# https://stackoverflow.com/a/56486428/2334574
iptools.myip () {
    ip route get 1 | sed -n 's/^.*src \([0-9.]*\) .*$/\1/p'
}

iptools.get_ip () {
    dig "$1" +short
}

# also updates if existing hostname entry has a different IP
iptools.hosts.add () {
    local hostname; hostname="$1"
    local ip; ip="$2"
    local etc_hosts; etc_hosts=${3:-/etc/hosts} # useful for debugging

    if grep --extended-regexp "^$ip(\s|\s.*\s)$hostname(\s|$)" "$etc_hosts" > /dev/null
    then
        return 0
    fi

    local line
    if line="$(grep --extended-regexp "^$ip\s" "$etc_hosts")"
    then
        sed -i "/^${ip}\s/d" "$etc_hosts"       # delete the line
        echo "$line $hostname" >> "$etc_hosts"  # append it back in, with additional hostname
        return 0
    fi

    if grep --extended-regexp "\s$hostname(\s|$)" "$etc_hosts" > /dev/null
    then
        iptools.hosts.rm "$hostname" "$etc_hosts"
    fi

    echo "$ip $hostname" >> "$etc_hosts"
}

iptools.hosts.rm () {
    local hostname; hostname="$1"
    local etc_hosts; etc_hosts=${2:-/etc/hosts} # useful for debugging

    local line

    if ! line="$(grep --extended-regexp "\s$hostname(\s|$)" "$etc_hosts")"
    then
        errcho "Did not find hostname $hostname"
        return 0
    fi

    sed -i --regexp-extended "/\s$hostname(\s|$)/d" "$etc_hosts"            # delete the line

    # shellcheck disable=SC2001
    line="$(echo "$line" | sed --regexp-extended "s/\s$hostname(\s|$)/ /")"  # remove hostname from the line

    # append the line back in, if it still has other hostname(s)
    if [[ $(echo "$line" | wc --words) -gt 1 ]]; then
        echo "$line" >> "$etc_hosts"
    fi
}
