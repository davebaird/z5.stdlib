#!/usr/bin/env bash
set -o errexit
set -o nounset
set -o pipefail
set -o noclobber
IFS=$'\t\n'

# https://krisjordan.com/blog/2013/11/02/push-to-deploy-with-git

# On the production server, set up a bare repository for the target repo:
#   cd /srv/git
#   git clone --bare git@github.com:gitusername/my-repo.git

# Install this file as 'post-receive' in the hooks folder of the .git folder
# of the bare repository. Make it executable. Edit deploy_to_dir to point to
# the final deployment destination.
#   scp post-receive dave@urr:/srv/git/my-repo.git/hooks/post-receive

# On the dev machine, dotfiles gitconfig sets up a git command alias:
# git plive == git push live master

# On the dev machine, set up the 'live' target thusly:
# git clone git@github.com:gitusername/my-repo.git
# cd my-repo
# git remote add live dave@urr:/srv/git/my-repo.git

IFS=' ' read -r from to branch

if [[ $branch != refs/heads/master ]]
then
    echo "Received branch ${branch}, not deploying." >&2
    exit 1
fi

# Copy files to deploy directory
deploy_to_dir=/usr/local/src/docker.poet-mason  # /path/to/installation
mkdir -p "$deploy_to_dir"
GIT_WORK_TREE="$deploy_to_dir" git checkout -f master
printf "DEPLOY: master (%s) copied to '%s'" "$to" "$deploy_to_dir"

# 4.TODO: Deployment Tasks
# i.e.: Run Puppet Apply, Restart Daemons, etc
# cd "$deploy_to_dir"
# docker build -t poet-mason .
