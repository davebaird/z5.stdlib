#!/bin/bash
import errcho
import checks

install.yq () {
    which yq > /dev/null && return 0
    test.i_can_root || errxit "Must be root to ${FUNCNAME[0]}"

    install.snap

    snap install yq
}

install.snap () {
    if which snap > /dev/null
    then
        install._snap_fix_path # necessary if re-running the install script in the same session
        return 0
    fi

    test.i_can_root || errxit "Must be root to ${FUNCNAME[0]}"
    test.is_debian  || errxit "Don't know how to install snap on this platform"

    install.apt.pkgs snapd

    snap install core

    install._snap_fix_path
}

# don't be tempted to put this awkwardness in a sub-shell to save messing around
# with shopt - the changes to $PATH would not get propagated back to us
install._snap_fix_path () {
    local nounset; nounset=0
    shopt -qo nounset && nounset=1
    set +o nounset
    source /etc/profile.d/apps-bin-path.sh
    [[ $nounset -eq 1 ]] && set -o nounset
}

test.installed.apt.pkgs () {(
    set +e
    dpkg --status "$@" > /dev/null 2>&1
)}

install.apt.pkgs () {
    test.installed.apt.pkgs "$@" && return 0
    # check.i_can_root "Must be root to ${FUNCNAME[0]} $*"
    sudo apt-get update
    sudo apt-get install --yes --quiet --no-install-recommends "$@"
}