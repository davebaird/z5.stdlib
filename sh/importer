#!/bin/bash

#  Useful reading:
#   https://stackoverflow.com/questions/11369522/bash-utility-script-library
#   https://google.github.io/styleguide/shellguide.html

# Other interesting/similar projects:
#   https://github.com/kvz/bash3boilerplate
#   https://github.com/codeforester/base
#   https://github.com/srcshelton/stdlib.sh


if [[ -n ${1:-} && $1 == *strict ]]; then
    # http://redsymbol.net/articles/unofficial-bash-strict-mode/
    set -o errexit
    set -o nounset
    set -o pipefail
    set -o noclobber
    # IFS=$'\t\n'
fi

if [[ -n ${1:-} && $1 == vstrict ]]; then
    IFS=$'\t\n'
fi

# Used in cleanup._on_exit
nostrict () {
    set +o errexit
    set +o nounset
    set +o pipefail
    set +o noclobber
    IFS=$' \n\t'
}

# https://unix.stackexchange.com/a/246703/154825
if [[ -z "${Imported+set}" ]]; then
    declare -A Imported
    Imported[0]="i am set"
fi

# set DEBUG_STDLIB unless it was already exported by caller
test_debug=${DEBUG_STDLIB:-}
if [[ -z $test_debug ]]; then
    export DEBUG_STDLIB=
fi

# https://unix.stackexchange.com/questions/4650/determining-path-to-sourced-shell-script
# don't put this inside functions, it'll get it wrong (see link)
_z5stdlibshdir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"

declare -xA Z5_STDLIB_SEARCHDIRS

Z5_STDLIB_SEARCHDIRS["$_z5stdlibshdir"]=1

add.searchdir () {
    Z5_STDLIB_SEARCHDIRS["$1"]=1
}

stdlib.self_update () (
    cd "$_z5stdlibshdir"/..
    # git is installed; the current user owns this file; stdlibdir is in a git repo
    if which git > /dev/null && [[ -O ${BASH_SOURCE[0]} ]] && git rev-parse 2> /dev/null ; then
        git pull > /dev/null
    fi
)

debug_stdlib () {
    [[ $DEBUG_STDLIB -ne 1 ]] && return 0

    local debug_msg="[${BASH_SOURCE[1]}::${FUNCNAME[1]}()]: $*"

    if [[ -n ${Imported[errcho]+x} ]] && [[ ${Imported[errcho]} -eq 1 ]]; then
        yerrcho "$debug_msg"
    else
        echo "$debug_msg" >&2
    fi
}

# import somelib
import () {
    local lib; lib="$1"; shift
    # note for the confused: debug_stdlib always returns true
    [[ -n ${Imported[$lib]+x} ]] && [[ ${Imported[$lib]} -eq 1 ]] && debug_stdlib "Already imported $lib" && return 0
    reimport "$lib" "$@"
}

reimport () {
    local lib; lib="$1"; shift
    debug_stdlib "Importing $lib"

    local -a searchdirs; searchdirs=("${!Z5_STDLIB_SEARCHDIRS[@]}")

    for searchdir in "${searchdirs[@]}"
    do
        if [[ -f "$searchdir/$lib" ]]; then
            # shellcheck disable=SC1090
            source "$searchdir/$lib" "$@" # || { echo "ERROR: importing $lib ($?)"; return "$?"; }
            Imported[$lib]=1
            debug_stdlib "Imported $lib"
            return 0
        fi
    done

    echo "ERROR: Library '$lib' not found in ${searchdirs[*]}" >&2
    return 1
}

if [[ $DEBUG_STDLIB -eq 1 ]]; then
    import errcho
    import stacktrace
fi

:
