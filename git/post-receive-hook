#!/usr/bin/env bash
# https://krisjordan.com/blog/2013/11/02/push-to-deploy-with-git
source /usr/local/src/z5.stdlib/sh/importer vstrict || exit 1
import errcho

# On the production server, set up a bare repository for the target repo:
#   cd /srv/git
#   git clone --bare git@github.com:gitusername/my-repo.git

# Install this file as 'post-receive' in the hooks folder of the .git folder
# of the bare repository. Make it executable. Edit deploy_to_dir to point to
# the final deployment destination.

# On the dev machine, dotfiles gitconfig sets up a git command alias:
# git plive == git push live master

# On the dev machine, set up the 'live' target thusly:
# git clone git@github.com:gitusername/my-repo.git
# cd my-repo
# git remote add live dave@urr:/srv/git/my-repo.git

from="$1"; to="$2"; branch="$3"

[[ $branch == master ]] || errxit "Received branch ${branch}, not deploying."

# Copy files to deploy directory
deploy_to_dir=/path/to/installation
GIT_WORK_TREE="$deploy_to_dir" git checkout -f master
printf "DEPLOY: master (%s) copied to '%s'" "$to" "$deploy_to_dir"

# 4.TODO: Deployment Tasks
# i.e.: Run Puppet Apply, Restart Daemons, etc

