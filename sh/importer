#!/bin/bash

if [[ -n ${1:-} && $1 == strict ]]; then
    # http://redsymbol.net/articles/unofficial-bash-strict-mode/
    set -o errexit
    set -o nounset
    set -o pipefail
    set -o noclobber
    IFS=$'\n\t'
fi

# https://unix.stackexchange.com/a/246703/154825
if [[ -z "${Imported+set}" ]]; then
    declare -A Imported
    Imported[0]="i am set"
fi

# set DEBUG_STDLIB unless it was already exported by caller
test_debug=${DEBUG_STDLIB:-}
if [[ -z $test_debug ]]; then
    export DEBUG_STDLIB=
fi

# https://unix.stackexchange.com/questions/4650/determining-path-to-sourced-shell-script
# don't put this inside functions, it'll get it wrong (see link)
_z5stdlibshdir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
# _z5stdlibdir="$(dirname "$_z5stdlibshdir")"

# # TODO: use a cache e.g. in ~/.z5.stdlibrc.d to only do this 1x per hour
# _stdlib_self_update () {(
#     cd "$_z5stdlibdir"
#     # git is installed; the current user owns this file; stdlibdir is in a git repo
#     if which git > /dev/null && [[ -O ${BASH_SOURCE[0]} ]] && git rev-parse 2> /dev/null ; then
#         git pull > /dev/null
#     fi
# )}

# _stdlib_self_update

debug_stdlib () {
    [[ $DEBUG_STDLIB -ne 1 ]] && return 0

    local debug_msg="[${BASH_SOURCE[1]}::${FUNCNAME[1]}()]: $*"

    if [[ -n ${Imported[errcho]+x} ]] && [[ ${Imported[errcho]} -eq 1 ]]; then
        yerrcho "$debug_msg"
    else
        echo "$debug_msg" >&2
    fi
}

# import somelib
import () {
    local lib; lib="$1"
    shift
    debug_stdlib "Import $lib"

    if [[ -f "$_z5stdlibshdir/$lib" ]]; then
        [[ -n ${Imported[$lib]+x} ]] && [[ ${Imported[$lib]} -eq 1 ]] && debug_stdlib "... already imported $lib" && return 0

        debug_stdlib "Importing $lib"
        # shellcheck disable=SC1090
        source "$_z5stdlibshdir/$lib" "$@" # || { echo "ERROR: importing $lib ($?)"; return "$?"; }
        Imported[$lib]=1
        debug_stdlib "Imported $lib"
        return 0
    else
        echo "ERROR: Library '$lib' not found in $_z5stdlibshdir" >&2
        return 1
    fi
}

if [[ $DEBUG_STDLIB -eq 1 ]]; then
    import errcho
    import stacktrace
fi

:
